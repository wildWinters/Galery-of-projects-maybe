[
    {
      "question": "Що таке React і для чого він використовується?",
      "correct_answer": "React — це JavaScript-бібліотека для створення інтерфейсів користувача. Вона дозволяє будувати динамічні та інтерактивні веб-додатки.",
      "incorrect_answer_1": "React — це мова програмування для створення серверних додатків.",
      "incorrect_answer_2": "React — це інструмент для управління базами даних у веб-додатках."
    },
    {
      "question": "Що таке компонент у React?",
      "correct_answer": "Компонент — це незалежний, багаторазовий блок коду, який визначає певну частину інтерфейсу користувача.",
      "incorrect_answer_1": "Компонент — це змінна, яка зберігає дані про користувача.",
      "incorrect_answer_2": "Компонент — це файл конфігурації для налаштування React-додатка."
    },
    {
      "question": "Що таке Virtual DOM і як він працює?",
      "incorrect_answer_1": "Virtual DOM — це фізичне сховище, де зберігаються всі дані додатка.",
      "correct_answer": "Virtual DOM — це легка копія реального DOM, яку React використовує для швидкої перевірки змін в інтерфейсі.",
      "incorrect_answer_2": "Virtual DOM — це система керування станом додатка, як Redux."
    },
    {
      "question": "Що таке props у React і як вони використовуються?",
      "incorrect_answer_1": "Props — це функції для оновлення стану компонентів.",
      "correct_answer": "Props — це спосіб передачі даних від батьківського компонента до дочірнього. Вони є незмінними.",
      "incorrect_answer_2": "Props — це змінні, які можуть змінюватися всередині компонента."
    },
    {
      "question": "Що таке state у React і в чому його відмінність від props?",
      "incorrect_answer_1": "State — це функція, яка передається в компонент для відображення даних.",
      "correct_answer": "State — це об'єкт, який зберігає змінні дані для компонента і може змінюватися з часом.",
      "incorrect_answer_2": "State — це властивість, яка передається дочірньому компоненту, але не може змінюватись."
    },
    {
      "question": "Що таке useState і як він працює?",
      "incorrect_answer_1": "useState — це функція для створення нових компонентів.",
      "correct_answer": "useState — це хук, який дозволяє використовувати стан у функціональних компонентах і оновлювати його.",
      "incorrect_answer_2": "useState — це метод для підключення до зовнішніх API в React."
    },
    {
      "question": "Для чого використовується useEffect?",
      "incorrect_answer_1": "useEffect — це функція, що використовується для зміни стану компонентів.",
      "incorrect_answer_2": "useEffect — це метод для передачі даних між компонентами.",
      "correct_answer": "useEffect — це хук, який дозволяє виконувати побічні ефекти, як-от отримання даних або підписку на оновлення."
    },
    {
      "question": "Що таке JSX і як він працює в React?",
      "incorrect_answer_1": "JSX — це мова, яка компілюється у чистий HTML.",
      "correct_answer": "JSX — це синтаксис, схожий на HTML, який використовується для опису інтерфейсу користувача у JavaScript.",
      "incorrect_answer_2": "JSX — це модуль, який дозволяє працювати з базами даних у React."
    },
    {
      "question": "Що таке компонент вищого порядку (HOC) у React?",
      "incorrect_answer_1": "HOC — це спеціальний тип стану в React.",
      "incorrect_answer_2": "HOC — це бібліотека для оптимізації продуктивності React-додатка.",
      "correct_answer": "HOC — це функція, яка приймає компонент і повертає новий компонент з додатковою функціональністю."
    },
    {
      "question": "Як працює пропс children у React?",
      "correct_answer": "children — це спеціальний пропс, який містить усі вкладені елементи, передані до компонента.",
      "incorrect_answer_1": "children — це спеціальна функція для обробки подій у React.",
      "incorrect_answer_2": "children — це стан, що зберігає вкладені компоненти у React."
    }
  ]
  